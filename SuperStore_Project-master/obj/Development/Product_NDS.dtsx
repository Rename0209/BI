<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/18/2023 4:47:22 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CLOUD"
  DTS:CreatorName="CLOUD\ndvannhi"
  DTS:DTSID="{6DD517B1-4F1B-420F-AD99-12D5C7C2FE70}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1066"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="26"
  DTS:VersionGUID="{071A6542-EB21-45F9-8E57-914E7DB8C0F3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5A5F80D-2EB6-4818-A900-A0C2F31ABCF0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="cate_max_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7ED200FC-A007-4F47-9CDB-9DC0A63DAA96}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="product_max_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74C7EFBE-6554-4B25-8DDD-CB8EA7C62DD4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="sub_cate_max_id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Category to NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ED64859E-B04F-418F-9A5B-5255D66FB452}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Category to NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Category to NDS\Category to NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{F6BB813D-2785-48C2-AB90-38AECD9AD189}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Category to NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add created_date &amp; updated_date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]"
                          name="created_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          name="updated_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          name="category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Check exist"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check exist"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_CATEGORY]) [refTable]
where [refTable].[category] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Category to NDS\Category to NDS\Check exist.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input].Columns[category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category_trimmed"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">category</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input].Columns[category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category_trimmed"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[CategoryNULL]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="CategoryNULL"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(category_trimmed)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[CategoryNOTNULL]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="CategoryNOTNULL"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\Derived Column.Inputs[Derived Column Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output].Columns[category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]"
                          name="category_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output].Columns[category]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(category)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[NDS_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[created_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="created_date"
                          externalMetadataColumnId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]" />
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[updated_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="updated_date"
                          externalMetadataColumnId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          lineageId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]" />
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[categoryid]"
                          cachedDataType="i4"
                          cachedName="categoryid"
                          externalMetadataColumnId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          lineageId="Package\Category to NDS\Category to NDS\Script Component.Outputs[Output 0].Columns[categoryid]" />
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category_trimmed"
                          externalMetadataColumnId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                          lineageId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output].Columns[category_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                          dataType="wstr"
                          length="255"
                          name="category" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          dataType="dbTimeStamp"
                          name="created_date" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          dataType="dbTimeStamp"
                          name="updated_date" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Stage_Product]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Category to NDS\Category to NDS\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{DF370CB7-DC68-4721-ADC8-988F986BD9B4}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD Stage_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          length="255"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          name="category"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_id]"
                          dataType="wstr"
                          length="255"
                          name="product_id" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          dataType="wstr"
                          length="255"
                          name="category" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sub_category]"
                          dataType="wstr"
                          length="255"
                          name="sub_category" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[source_id]"
                          dataType="i4"
                          name="source_id" />
                        <externalMetadataColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[order_date]"
                          dataType="dbTimeStamp"
                          name="order_date" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          name="category" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 catemaxid
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["cate_max_id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count = 0;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        Row.categoryid = this.Variables.catemaxid + count;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 categoryid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool categoryid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2bca3920c8ee4764946cc4a496893ce8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{401901DC-AA8F-484A-B0C6-528D6B0D9D13}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2bca3920c8ee4764946cc4a496893ce8</RootNamespace>
    <AssemblyName>SC_2bca3920c8ee4764946cc4a496893ce8</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Settings.get_Default():SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Sett" +
    "ings")]

namespace SC_2bca3920c8ee4764946cc4a496893ce8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_2bca3920c8ee4764946cc4a496893ce8</msb:CodeName>
    <msb:DisplayName>SC_2bca3920c8ee4764946cc4a496893ce8</msb:DisplayName>
    <msb:ProjectId>{81C172CF-B413-48CD-8BAF-D9D1B85DC9F4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2bca3920c8ee4764946cc4a496893ce8.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2bca3920c8ee4764946cc4a496893ce8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_2bca3920c8ee4764946cc4a496893ce8")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2bca3920c8ee4764946cc4a496893ce8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2bca3920c8ee4764946cc4a496893ce8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2bca3920c8ee4764946cc4a496893ce8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD0dgGUAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAWjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgzAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
MwAAAAAAAEgAAAACAAUA0CEAAIAQAAABAAAAAAAAAFAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqeAgJ7AQAABBdYfQEAAAQDAnsD
AAAEbxAAAAYCewEAAARYbwYAAAYqHgIoCgAABioqAgMEBSgSAAAKKjoCFgOMHAAAASgTAAAKKloD
LAgCFigUAAAKKnIBAABwcxUAAAp6HgIoFgAACioeAigXAAAKKn4CKBgAAAoCAnMOAAAGfQIAAAQC
AnMPAAAGfQMAAAQqkgRyngAAcBpvGQAACiwVAgUCAygaAAAKDgRzBQAABm8MAAAGKkorBwIDbw0A
AAYDbwgAAAYt8SoGKjoCKBsAAAoCA30EAAAEKjoCKBsAAAoCA30FAAAEKpYCewUAAARvHAAACnKu
AABwbx0AAAooHgAACm8fAAAKpRwAAAEqHgIoGwAACiqufgYAAAQtHnLGAABw0AcAAAIoIAAACm8h
AAAKcyIAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAigjAAAKKi5zFgAABoAI
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKgFAAAjfgAAFAYAAGQH
AAAjU3RyaW5ncwAAAAB4DQAAOAEAACNVUwCwDgAAEAAAACNHVUlEAAAAwA4AAMABAAAjQmxvYgAA
AAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAmAAAACAAAAAgAAAAXAAAADwAAACMAAAAQAAAA
BAAAAAYAAAAHAAAAAQAAAAYAAAABAAAAAABGAwEAAAAAAAYAQAL7BAYA1AL7BAYAjAHoBA8AbwUA
AAYAuQHmAwYAIwLmAwYABALmAwYAuwLmAwYAYALmAwYAeQLmAwYA0AHmAwYA6wEPAwoAlALZAA4A
WgbDBTsAagQAAAoAkgTZABIAgwTZAAoALwTZAAoAiwbZAAYAOwaeAwYAbwHoBAYAowQbBQYAIwTR
AxYAPwEwAxYAoAEwAxYAJwG8AwYAVAH7BAYAOgCeAwYA+AOeAwYAKQOeAwYAEgSeAxoAEQCzBBoA
AQCzBE8ABwcAABoAIgCzBAYA+gCeAwYAqwCeAwYAWgfmAwAAAABkAAAAAAABAAEAAQAQALEDAAAQ
AAEAAQABABAAdgQAAEEAAgAFAAEAEABtBgAATQACAAoAAQAQAC8GAABRAAQADgABABAAuQUAAFEA
BQAPAAAAEAAiBX4FUQAGABEAAAEQAAoGfgVpAAgAFQABAJsGfwAGAC8GggAGALkFhgABAHsGigAB
AHsGigARAKUDjgARABcBkgARAJsAlgBQIAAAAADGAPICBgABAFggAAAAAMYA/QIGAAEAYCAAAAAA
xgA3B5oAAQCIIAAAAACGGNsEBgACAJAgAAAAAIYY2wQbAAIAmyAAAAAAhgiMAAEABQCqIAAAAACG
CG4DoAAGAMEgAAAAAIYATgcrAAcAySAAAAAAhgBCBisABwDRIAAAAACGGNsEBgAHAPEgAAAAAMYA
5galAAcAFiEAAAAAxgHfBpoACwApIQAAAADGATcHmgAMACshAAAAAIYY2wSvAA0AOiEAAAAAhhjb
BK8ADgBJIQAAAACGCH4AtQAPAG8hAAAAAIMY2wQGAA8AdyEAAAAAkwifBLkADwCjIQAAAACTCP8A
vgAPAKohAAAAAJMICwHDAA8AsiEAAAAAlghOBskAEAC5IQAAAACGGNsEBgAQAMEhAAAAAJEY4QTO
ABAAAAABAFIHAAABAJgEAAACAOUFAAADAD0EAAABAAkDAAABAAkDAAABAG0AAAACAM8AAAADAJgE
AAAEAD0EAAABAJgEAAABAFIHAAABAJEGAAABAJEGAAABAAkDCQDbBAEAEQDbBAYAGQDbBAoAKQDb
BBAAMQDbBBAAOQDbBBAAQQDbBBAASQDbBBAAUQDbBBAAWQDbBBAAYQDbBBAAaQDbBAYAqQDbBAYA
yQDbBBUA2QDbBAYAmQDyAgYAmQD9AgYAgQDbBBsAgQCVAyUAgQCEAwEA6QDbBBAAgQBOBysAgQBC
BisAmQDbBAYA8QATBi8AmQD5BTYAoQDbBAYAmQCtBTwAAQGMA0IAmQAiB0kACQHzBk8AIQG9AFYA
IQFWB18AsQDbBGUA0QDbBAYALgALAOkALgATAPIALgAbABEBLgAjABoBLgArAEMBLgAzAEMBLgA7
AEkBLgBDABoBLgBLAFEBLgBTAEMBLgBbAGoBQwBjALgBiQBzABEBqQBzABEB4wBrALgBAQF7ALgB
AwABAAYAAwAHAAQACAAGAAAAkADSAAAAcgPWAAAAggDSAAAAowTaAAAAHwHfAAAAUgbkAAEABgAD
AAEABwAFAAIAEAAHAAIAEgAJAAIAEwALAAEAFAALAAIAFQANAASAAAABAAAAAAAAAAAAAAAAAEAA
AAAEAAAAAAAAAAAAAABtAHUAAAAAABAAAAAAAAAAAAAAAHYAoQYAAAAABAAAAAAAAAAAAAAAbQAa
BgAAAAAQAAAAAAAAAAAAAAB2AL4GAAAAAAQAAAAAAAAAAAAAAG0AngMAAAAAEAAAAAAAAAAAAAAA
dgBHBAAAAAAAAAAAAQAAACwFAAAAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEludDMyAFNDXzJiY2EzOTIwYzhlZTQ3NjQ5NDZjYzRh
NDk2ODkzY2U4ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAZ2V0X2NhdGVtYXhpZABzZXRfY2F0
ZWdvcnlpZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNDXzJiY2EzOTIwYzhlZTQ3NjQ5NDZjYzRhNDk2ODkzY2U4LmRsbABzZXRfY2F0ZWdv
cnlpZF9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNSdW50aW1lV3JhcABQcm9ncmVzc0JhcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2Ny
aXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzJiY2EzOTIwYzhlZTQ3NjQ5
NDZjYzRhNDk2ODkzY2U4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ18yYmNhMzkyMGM4ZWU0NzY0OTQ2Y2M0YTQ5Njg5M2NlOC5Qcm9wZXJ0aWVzAGdldF9S
ZWFkT25seVZhcmlhYmxlcwBTeXN0ZW0uV2luZG93cy5Gb3Jtcy5WaXN1YWxTdHlsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBTeXN0ZW0uV2lu
ZG93cy5Gb3JtcwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVmlz
dWFsU3R5bGVFbGVtZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABjb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABT
Y3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJv
Y2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAgJtJAHMATgB1AGwAbAAgAHAAcgBv
AHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUA
LgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBt
AG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAXYwBhAHQAZQBfAG0AYQB4AF8A
aQBkAABxUwBDAF8AMgBiAGMAYQAzADkAMgAwAGMAOABlAGUANAA3ADYANAA5ADQANgBjAGMANABh
ADQAOQA2ADgAOQAzAGMAZQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAABBCwKgeB5DRpF2SbyA2RT+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhCSADARJFHQgS
SQUgAgEIHAMgAAIGIAICDhF9BSABHQgIBSAAEoCBBiABEoCFHAUAABKAiQYgARwSgI0IAAESgJER
gJUFIAASgJkHIAIBDhKAmQi3elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSTQMGElkDBhJd
AwYSIAUgAQESDAQgAQECCSAEAQgOEkUSSQUgAQESTQMgAAgEAAASWQQAABJdBQABARJdBAAAEiAD
AAABAygACAMoAAIECAASWQQIABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzJiY2EzOTIwYzhlZTQ3NjQ5NDZjYzRhNDk2ODkzY2U4
AAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDIzAABNAQAcLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsg
NC43LjIEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAwMwAAAAAAAAAAAABKMwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAPDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AMgBiAGMAYQAzADkAMgAwAGMAOABlAGUANAA3ADYANAA5ADQANgBjAGMANABh
ADQAOQA2ADgAOQAzAGMAZQA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyAGIAYwBh
ADMAOQAyADAAYwA4AGUAZQA0ADcANgA0ADkANAA2AGMAYwA0AGEANAA5ADYAOAA5ADMAYwBlADgA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwAyAGIAYwBhADMAOQAyADAAYwA4AGUAZQA0ADcANgA0ADkANAA2AGMAYwA0AGEANAA5ADYA
OAA5ADMAYwBlADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AMgBiAGMAYQAzADkAMgAwAGMAOABlAGUANAA3ADYANAA5ADQANgBjAGMANABhADQAOQA2ADgA
OQAzAGMAZQA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2bca3920c8ee4764946cc4a496893ce8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::cate_max_id</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">64</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Category to NDS\Category to NDS\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Script Component.Outputs[Output 0].Columns[categoryid]"
                          dataType="i4"
                          lineageId="Package\Category to NDS\Category to NDS\Script Component.Outputs[Output 0].Columns[categoryid]"
                          name="categoryid" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Category to NDS\Category to NDS\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Category to NDS\Category to NDS\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Category to NDS\Category to NDS\Sort.Inputs[Sort Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          name="category"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Aggregate Output 1]"
                  endId="Package\Category to NDS\Category to NDS\Sort.Inputs[Sort Input]"
                  name="Aggregate Output 1"
                  startId="Package\Category to NDS\Category to NDS\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[CategoryNOTNULL]"
                  endId="Package\Category to NDS\Category to NDS\Check exist.Inputs[Lookup Input]"
                  name="CategoryNOTNULL"
                  startId="Package\Category to NDS\Category to NDS\Conditional Split.Outputs[CategoryNOTNULL]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Derived Column Output]"
                  endId="Package\Category to NDS\Category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Category to NDS\Category to NDS\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Derived Column Output1]"
                  endId="Package\Category to NDS\Category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Lookup No Match Output]"
                  endId="Package\Category to NDS\Category to NDS\Script Component.Inputs[Input 0]"
                  name="Lookup No Match Output"
                  startId="Package\Category to NDS\Category to NDS\Check exist.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[OLE DB Source Output]"
                  endId="Package\Category to NDS\Category to NDS\Aggregate.Inputs[Aggregate Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Category to NDS\Category to NDS\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Output 0]"
                  endId="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Category to NDS\Category to NDS\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Category to NDS\Category to NDS.Paths[Sort Output]"
                  endId="Package\Category to NDS\Category to NDS\Derived Column.Inputs[Derived Column Input]"
                  name="Sort Output"
                  startId="Package\Category to NDS\Category to NDS\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Category to NDS\Get cate_max_id"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E1BCC798-B7B8-468D-B938-D88E6381794E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get cate_max_id"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{97923543-993D-4C1A-910C-9D7C63BE69C8}"
              SQLTask:SqlStatementSource="select ISNULL(MAX(id),0) from NDS_CATEGORY"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::cate_max_id" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Category to NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{0B782BA1-40C6-444C-AD5B-54F4992B2C3D}"
          DTS:From="Package\Category to NDS\Get cate_max_id"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Category to NDS\Category to NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Product to DDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{097F8589-2E81-45D4-AA6E-2698E9026089}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Product to DDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Product to DDS\Get product_max_id"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1CB0160B-463E-462F-83E9-A74D68242C1F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get product_max_id"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{97923543-993D-4C1A-910C-9D7C63BE69C8}"
              SQLTask:SqlStatementSource="select ISNULL(MAX(id),0) from NDS_PRODUCT"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::product_max_id" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Product to DDS\Product to NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{B25A6B99-3ED4-4302-AC8E-8B172C26C966}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Product to NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add created &amp; updated date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[created_Date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[created_Date]"
                          name="created_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[updated_Date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[updated_Date]"
                          name="updated_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Add updated_date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add updated_date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Add updated_date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Add updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          name="updated_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Add updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[product_id]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[product_name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_name]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[order_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="order_date"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[order_date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_id]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_id]"
                          name="product_id">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_id]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_name]"
                          name="product_name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          name="category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]"
                          name="sub_category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[order_date]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[order_date]"
                          name="order_date">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[order_date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Check category"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check category"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_CATEGORY]) [refTable]
where [refTable].[category] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\Check category.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input].Columns[category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category_trimmed"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">category</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]"
                          name="category_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Check product"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check product"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_PRODUCT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_PRODUCT]) [refTable]
where [refTable].[product_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="product_id" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sub_category_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="product_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\Check product.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">product_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[created_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[created_date]"
                          name="created_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">created_date</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]"
                          name="out_product_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Check sub_category"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check sub_category"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_SUB_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_SUB_CATEGORY]) [refTable]
where [refTable].[sub_category] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sub_category" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\Check sub_category.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input].Columns[sub_category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category_trimmed"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">sub_category</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]"
                          name="sub_category_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[productIDNULL]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="productIDNULL"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(product_id_trimmed)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[productIDNOTNULL]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="productIDNOTNULL"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Conditional Split 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input].Columns[IDRow]"
                          cachedDataType="i4"
                          cachedName="IDRow"
                          lineageId="Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0].Columns[IDRow]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0].Columns[IDRow]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">IDRow == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Case !1]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Case !1"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Insert Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[NDS_PRODUCT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\Insert Destination.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[out_product_id]"
                          cachedDataType="i4"
                          cachedName="out_product_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_id]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[category_id]"
                          cachedDataType="i4"
                          cachedName="category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[sub_category_id]"
                          cachedDataType="i4"
                          cachedName="sub_category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category_id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[product_name_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_name]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[created_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="created_date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[created_date]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].Columns[updated_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="updated_date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          lineageId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output].Columns[updated_date]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_id]"
                          dataType="wstr"
                          length="255"
                          name="product_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          dataType="i4"
                          name="category_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category_id]"
                          dataType="i4"
                          name="sub_category_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          dataType="dbTimeStamp"
                          name="created_date" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          dataType="dbTimeStamp"
                          name="updated_date" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Insert Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\OLE DB Command"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Command"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [dbo].[NDS_PRODUCT] SET [category_id] = ?,[created_date] = ?,[product_id] = ?,[product_name] = ?,[sub_category_id] = ?,[updated_date] = ? WHERE [id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[category_id]"
                          cachedDataType="i4"
                          cachedName="category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[created_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="created_date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[created_date]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[out_product_id]"
                          cachedDataType="i4"
                          cachedName="out_product_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[product_name_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[sub_category_id]"
                          cachedDataType="i4"
                          cachedName="sub_category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[updated_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="updated_date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          lineageId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output].Columns[updated_date]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="i4"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="dbTimeStamp"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="wstr"
                          length="255"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                          dataType="wstr"
                          length="255"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                          dataType="dbTimeStamp"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                          dataType="i4"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\OLE DB Command 1"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="OLE DB Command 1"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [dbo].[NDS_PRODUCT] SET [product_name] = ? WHERE [id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[out_product_id]"
                          cachedDataType="i4"
                          cachedName="out_product_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[product_name_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          dataType="wstr"
                          length="255"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[NDS_PRODUCT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_id]"
                          cachedDataType="i4"
                          cachedName="category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[sub_category_id]"
                          cachedDataType="i4"
                          cachedName="sub_category_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category_id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[created_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="created_Date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[created_Date]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[updated_Date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="updated_Date"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          lineageId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output].Columns[updated_Date]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[productid]"
                          cachedDataType="i4"
                          cachedName="productid"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          lineageId="Package\Product to DDS\Product to NDS\Script Component 1.Outputs[Output 0].Columns[productid]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_id]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[product_name_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_name]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_id]"
                          dataType="wstr"
                          length="255"
                          name="product_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          dataType="i4"
                          name="category_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category_id]"
                          dataType="i4"
                          name="sub_category_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          dataType="dbTimeStamp"
                          name="created_date" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          dataType="dbTimeStamp"
                          name="updated_date" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Stage_Product]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{DF370CB7-DC68-4721-ADC8-988F986BD9B4}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD Stage_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_id]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_id]"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_id]"
                          name="product_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          name="category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sub_category]"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]"
                          name="sub_category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_name]"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[product_name]"
                          name="product_name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[order_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[order_date]"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[order_date]"
                          name="order_date"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_id]"
                          dataType="wstr"
                          length="255"
                          name="product_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          dataType="wstr"
                          length="255"
                          name="category" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sub_category]"
                          dataType="wstr"
                          length="255"
                          name="sub_category" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[source_id]"
                          dataType="i4"
                          name="source_id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[order_date]"
                          dataType="dbTimeStamp"
                          name="order_date" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[product_id]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[product_id]"
                          name="product_id" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          name="category" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sub_category]"
                          name="sub_category" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[product_name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[product_name]"
                          name="product_name" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[order_date]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[order_date]"
                          name="order_date" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int rowNumber = 1;
    string lastID = null;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if (lastID == null || lastID != Row.productidtrimmed)
        {
            rowNumber = 1;
            lastID = Row.productidtrimmed;
        }
        else
        {
            rowNumber++;
        }
        Row.IDRow = rowNumber;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String productidtrimmed
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool productidtrimmed_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 IDRow
    {
        set
        {
            this[1] = value;
        }
    }
    public bool IDRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a993485f7478409ebfb4b03ae090d680.Properties.Settings.get_Default():SC_a993485f7478409ebfb4b03ae090d680.Properties.Sett" +
    "ings")]

namespace SC_a993485f7478409ebfb4b03ae090d680.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a993485f7478409ebfb4b03ae090d680.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3AAF7B64-7F25-4450-90CA-009DB87E7926}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a993485f7478409ebfb4b03ae090d680</RootNamespace>
    <AssemblyName>SC_a993485f7478409ebfb4b03ae090d680</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_a993485f7478409ebfb4b03ae090d680</msb:CodeName>
    <msb:DisplayName>SC_a993485f7478409ebfb4b03ae090d680</msb:DisplayName>
    <msb:ProjectId>{A8E8D810-2669-4262-B4BC-0629767BDA1F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a993485f7478409ebfb4b03ae090d680.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a993485f7478409ebfb4b03ae090d680")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_a993485f7478409ebfb4b03ae090d680")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a993485f7478409ebfb4b03ae090d680.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a993485f7478409ebfb4b03ae090d680.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a993485f7478409ebfb4b03ae090d680.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a993485f7478409ebfb4b03ae090d680.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a993485f7478409ebfb4b03ae090d680.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_a993485f7478409ebfb4b03ae090d680.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOFcgGUAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAARjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQxAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
MgAAAAAAAEgAAAACAAUA/CEAAEAPAAABAAAAAAAAADwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMASwAAAAAAAAACewIAAAQs
EwJ7AgAABANvBgAABigSAAAKLBUCF30BAAAEAgNvBgAABn0CAAAEKw4CAnsBAAAEF1h9AQAABAMC
ewEAAARvCAAABio6Ahd9AQAABAIoDAAABioqAgMEBSgTAAAKKlICexQAAAoCexUAAAoWlG8WAAAK
KiICFigXAAAKKjoCFwOMGwAAASgYAAAKKloDLAgCFygZAAAKKnIBAABwcxoAAAp6HgIoGwAACioe
AigcAAAKKn4CKB0AAAoCAnMQAAAGfQMAAAQCAnMRAAAGfQQAAAQqkgRyngAAcBpvHgAACiwVAgUC
AygfAAAKDgRzBQAABm8OAAAGKkorBwIDbw8AAAYDbwoAAAYt8SoGKjoCKCAAAAoCA30FAAAEKjoC
KCAAAAoCA30GAAAEKh4CKCAAAAoqrn4HAAAELR5yrgAAcNAHAAACKCEAAApvIgAACnMjAAAKgAcA
AAR+BwAABCoafggAAAQqHgKACAAABCoafgkAAAQqHgIoJAAACioucxcAAAaACQAABCoAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAfAUAACN+AADoBQAAaAYAACNTdHJpbmdzAAAA
AFAMAAAgAQAAI1VTAHANAAAQAAAAI0dVSUQAAACADQAAwAEAACNCbG9iAAAAAAAAAAIAAAFXFaAB
CQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACQAAABgAAAAPAAAAJAAAABAAAAADAAAABwAAAAgAAAAB
AAAABAAAAAEAAAAAAA8DAQAAAAAABgAGAoUEBgCaAoUEBgBSAXIEDwD5BAAABgB/Ab0DBgDpAb0D
BgDKAb0DBgCBAr0DBgAmAr0DBgA/Ar0DBgCWAb0DBgCxAdUCCgBaAp8ACgBEBJ8ADgA1BJ8ACgAG
BJ8ACgC/BZ8ABgCCBXUDBgA1AXIEBgBVBKUEBgD6A6gDEgAFAfkCEgBmAfkCEgDtAJMDBgAaAYUE
BgDyAnUDBgAlAHUDBgDPA3UDBgDpA3UDBgDAAHUDBgBxAHUDBgBOBr0DAAAAACsAAAAAAAEAAQAB
ABAAiAMAABAAAQABAAEAEAAoBAAAOQADAAUAAQAQAKEFAABFAAMADAABABAAdgUAAEkABQAQAAEA
EAA3BQAASQAGABEAAAAQAKwECAVJAAcAEgAAARAAZgUIBWEACQAWAAEAHgR7AAEANAB+AAYAdgWB
AAYANwWFAAEArwWJAAEArwWJABEAfAONABEA3QCRABEAYQCVAFAgAAAAAMYAuAIGAAEAWCAAAAAA
xgDDAgYAAQBgIAAAAADGACsGmQABALcgAAAAAIYYZQQGAAIAxiAAAAAAhhhlBCEAAgDRIAAAAACG
CEwAnwAFAOYgAAAAAIYINwNDAAUA7yAAAAAAhgghBgEABQD+IAAAAACGCFMDowAGABUhAAAAAIYA
QgZDAAcAHSEAAAAAhgCJBUMABwAlIQAAAACGGGUEBgAHAEUhAAAAAMYAFAaoAAcAaiEAAAAAxgEN
BpkACwB9IQAAAADGASsGmQAMAH8hAAAAAIYYZQSyAA0AjiEAAAAAhhhlBLIADgCdIQAAAACDGGUE
BgAPAKUhAAAAAJMIUQS4AA8A0SEAAAAAkwjFAL0ADwDYIQAAAACTCNEAwgAPAOAhAAAAAJYIlQXI
ABAA5yEAAAAAhhhlBAYAEADvIQAAAACRGGsEzQAQAAAAAQBGBgAAAQBKBAAAAgBBBQAAAwAUBAAA
AQDPAgAAAQDPAgAAAQA7AAAAAgCVAAAAAwBKBAAABAAUBAAAAQBKBAAAAQBGBgAAAQDFBQAAAQDF
BQAAAQDPAgkAZQQBABEAZQQGABkAZQQKACkAZQQQADEAZQQQADkAZQQQAEEAZQQQAEkAZQQQAFEA
ZQQQAFkAZQQQAGEAZQQQAGkAZQQGAJkAZQQGALkAZQQVAMkAZQQGAIkAuAIGAIkAwwIGANEAVwYb
AHEAZQQhAHEASgQrAHEAQQUvAHkA7wIzAHEAXQM4AHEAbAM9AHEAZAMBAOEAZQQQAHEAQgZDAHEA
iQVDAIkAZQQGANEAbwVHAIkAVQVOAJEAZQQGAPEAgwBUAPEASgZbAKEAZQRhAMEAZQQGAC4ACwDs
AC4AEwD1AC4AGwAUAS4AIwAdAS4AKwBGAS4AMwBGAS4AOwBMAS4AQwAdAS4ASwBUAS4AUwBGAS4A
WwBtAUMAYwC7AakAcwAUAckAcwAUAeMAawC7ASEBewC7AQMAAQAHAAUACAAHAAAAUADRAAAAOwPV
AAAAJQbZAAAAVwPVAAAAVQTdAAAA5QDiAAAAmQXnAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIA
EwALAAIAFAANAAEAFQANAAIAFgAPAASAAAABAAAAAAAAAAAAAAAAAAEAAAAEAAAAAAAAAAAAAABp
AEMAAAAAABAAAAAAAAAAAAAAAHIAzwUAAAAAEAAAAAAAAAAAAAAAcgDsBQAAAAAEAAAAAAAAAAAA
AABpAHUDAAAAAAAAAAABAAAAtgQAAAAAAFNDX2E5OTM0ODVmNzQ3ODQwOWViZmI0YjAzYWUwOTBk
NjgwAEludDMyADxNb2R1bGU+AGxhc3RJRABJbnB1dElEAG1zY29ybGliAGdldF9wcm9kdWN0aWR0
cmltbWVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU0NfYTk5MzQ4NWY3NDc4NDA5ZWJmYjRiMDNhZTA5MGQ2ODAuZGxsAGdldF9wcm9k
dWN0aWR0cmltbWVkX0lzTnVsbABzZXRfSURSb3dfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lz
dGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBT
dHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHJvd051
bWJlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYTk5MzQ4NWY3NDc4NDA5ZWJmYjRi
MDNhZTA5MGQ2ODAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDX2E5OTM0ODVmNzQ3ODQwOWViZmI0YjAzYWUwOTBkNjgwLlByb3BlcnRpZXMAVmFyaWFibGVz
AEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29u
bmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFy
ZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAc2V0
X0lEUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAb3BfSW5l
cXVhbGl0eQAAAAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0
ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYA
YQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9J
AG4AcAB1AHQAIAAwAABxUwBDAF8AYQA5ADkAMwA0ADgANQBmADcANAA3ADgANAAwADkAZQBiAGYA
YgA0AGIAMAAzAGEAZQAwADkAMABkADYAOAAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAABo02/SxNQSRJ2RW67pUhRKAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZ
BQACAg4OCSADARI9HQgSQQMGEj0DBh0IBCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF1BSABHQgI
BgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAgYOAwYSFAMGEhgDBhJF
AwYSUQMGElUDBhIgBSABARIMAyAADgQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEB
ElUEAAASIAMAAAEDKAAOAygAAgMoAAgECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2E5OTM0ODVmNzQ3ODQwOWViZmI0
YjAzYWUwOTBkNjgwAAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDIzAABNAQAc
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5F
VCBGcmFtZXdvcmsgNC43LjIEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAcMgAAAAAAAAAAAAA2MgAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAKDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AYQA5ADkAMwA0ADgANQBmADcANAA3ADgANAAwADkAZQBiAGYAYgA0AGIAMAAz
AGEAZQAwADkAMABkADYAOAAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhADkAOQAz
ADQAOAA1AGYANwA0ADcAOAA0ADAAOQBlAGIAZgBiADQAYgAwADMAYQBlADAAOQAwAGQANgA4ADAA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBhADkAOQAzADQAOAA1AGYANwA0ADcAOAA0ADAAOQBlAGIAZgBiADQAYgAwADMAYQBlADAA
OQAwAGQANgA4ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AYQA5ADkAMwA0ADgANQBmADcANAA3ADgANAAwADkAZQBiAGYAYgA0AGIAMAAzAGEAZQAwADkA
MABkADYAOAAwAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAASDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a993485f7478409ebfb4b03ae090d680</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">36</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Script Component.Inputs[Input 0].Columns[product_id_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id_trimmed"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0].Columns[IDRow]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0].Columns[IDRow]"
                          name="IDRow" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Script Component 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component 1"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 productmaxid
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["product_max_id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count = 0;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        Row.productid = this.Variables.productmaxid + count;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 productid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool productid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Settings.get_Default():SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Sett" +
    "ings")]

namespace SC_3b86c982a110487aab40dcb7758f3dcf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3b86c982a110487aab40dcb7758f3dcf.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{60D3835C-0D29-4688-8553-CE7039AAE9D2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3b86c982a110487aab40dcb7758f3dcf</RootNamespace>
    <AssemblyName>SC_3b86c982a110487aab40dcb7758f3dcf</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_3b86c982a110487aab40dcb7758f3dcf</msb:CodeName>
    <msb:DisplayName>SC_3b86c982a110487aab40dcb7758f3dcf</msb:DisplayName>
    <msb:ProjectId>{F09143B3-4D69-4581-9AF7-0DC98263DC13}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_3b86c982a110487aab40dcb7758f3dcf.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3b86c982a110487aab40dcb7758f3dcf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_3b86c982a110487aab40dcb7758f3dcf")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3b86c982a110487aab40dcb7758f3dcf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3b86c982a110487aab40dcb7758f3dcf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_3b86c982a110487aab40dcb7758f3dcf.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHRggGUAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA6jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJgyAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
MgAAAAAAAEgAAAACAAUA0CEAABAQAAABAAAAAAAAAOAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqeAgJ7AQAABBdYfQEAAAQDAnsD
AAAEbxAAAAYCewEAAARYbwYAAAYqHgIoCgAABioqAgMEBSgSAAAKKjoCFgOMGgAAASgTAAAKKloD
LAgCFigUAAAKKnIBAABwcxUAAAp6HgIoFgAACioeAigXAAAKKn4CKBgAAAoCAnMOAAAGfQIAAAQC
AnMPAAAGfQMAAAQqkgRyngAAcBpvGQAACiwVAgUCAygaAAAKDgRzBQAABm8MAAAGKkorBwIDbw0A
AAYDbwgAAAYt8SoGKjoCKBsAAAoCA30EAAAEKjoCKBsAAAoCA30FAAAEKpYCewUAAARvHAAACnKu
AABwbx0AAAooHgAACm8fAAAKpRoAAAEqHgIoGwAACiqufgYAAAQtHnLMAABw0AcAAAIoIAAACm8h
AAAKcyIAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAigjAAAKKi5zFgAABoAI
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIgFAAAjfgAA9AUAABAH
AAAjU3RyaW5ncwAAAAAEDQAAQAEAACNVUwBEDgAAEAAAACNHVUlEAAAAVA4AALwBAAAjQmxvYgAA
AAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAgAAAAXAAAADwAAACMAAAAQAAAA
BAAAAAYAAAAHAAAAAQAAAAUAAAABAAAAAABIAwEAAAAAAAYAHgLwBAYAsgLwBAYAagHdBA8AZAUA
AAYAlwHnAwYAAQLnAwYA4gHnAwYAmQLnAwYAPgLnAwYAVwLnAwYArgHnAwYAyQERAwoAcgK3AAoA
hwS3AA4AeAS3AAoAMAS3AAoANga3AAYA+QWfAwYATQHdBAYAmAQQBQYAJATSAxIAHQEyAxIAfgEy
AxIABQG9AwYAMgHwBAYAOgCfAwYA+QOfAwYAKwOfAwYAEwSfAxYAEQCoBBYAAQCoBEcAsgYAABYA
IgCoBAYA2ACfAwYAiQCfAwYABQfnAwAAAABAAAAAAAABAAEAAQAQALIDAAAQAAEAAQABABAAawQA
ADkAAgAFAAEAEAAYBgAARQACAAoAAQAQAO0FAABJAAQADgABABAArgUAAEkABQAPAAAAEAAXBXMF
SQAGABEAAAEQAN0FcwVhAAgAFQABAEYGfQAGAO0FgAAGAK4FhAABACYGiAABACYGiAARAKYDjAAR
APUAkAARAHkAlABQIAAAAADGANACBgABAFggAAAAAMYA2wIGAAEAYCAAAAAAxgDiBpgAAQCIIAAA
AACGGNAEBgACAJAgAAAAAIYY0AQbAAIAmyAAAAAAhghaAAEABQCqIAAAAACGCHADngAGAMEgAAAA
AIYA+QYrAAcAySAAAAAAhgAABisABwDRIAAAAACGGNAEBgAHAPEgAAAAAMYAkQajAAcAFiEAAAAA
xgGKBpgACwApIQAAAADGAeIGmAAMACshAAAAAIYY0AStAA0AOiEAAAAAhhjQBK0ADgBJIQAAAACG
CGgAswAPAG8hAAAAAIMY0AQGAA8AdyEAAAAAkwiUBLcADwCjIQAAAACTCN0AvAAPAKohAAAAAJMI
6QDBAA8AsiEAAAAAlggMBscAEAC5IQAAAACGGNAEBgAQAMEhAAAAAJEY1gTMABAAAAABAP0GAAAB
AI0EAAACALgFAAADAD4EAAABAOcCAAABAOcCAAABAEkAAAACAK0AAAADAI0EAAAEAD4EAAABAI0E
AAABAP0GAAABADwGAAABADwGAAABAOcCCQDQBAEAEQDQBAYAGQDQBAoAKQDQBBAAMQDQBBAAOQDQ
BBAAQQDQBBAASQDQBBAAUQDQBBAAWQDQBBAAYQDQBBAAaQDQBAYAmQDQBAYAuQDQBBUAyQDQBAYA
iQDQAgYAiQDbAgYAcQDQBBsAcQCWAyUAcQCFAwEA2QDQBBAAcQD5BisAcQAABisAiQDQBAYA4QDm
BS8AiQDMBTYAkQDQBAYAiQCiBTwA8QCNA0EAiQDNBkcA+QCeBk0AEQGbAFQAEQEBB10AoQDQBGMA
wQDQBAYALgALAOcALgATAPAALgAbAA8BLgAjABgBLgArAEEBLgAzAEEBLgA7AEcBLgBDABgBLgBL
AE8BLgBTAEEBLgBbAGgBQwBjALYBiQBzAA8BqQBzAA8B4wBrALYBAQF7ALYBAwABAAYAAwAHAAQA
CAAGAAAAXgDQAAAAdAPUAAAAbADQAAAAmATYAAAA/QDdAAAAEAbiAAEABgADAAEABwAFAAIAEAAH
AAIAEgAJAAIAEwALAAEAFAALAAIAFQANAASAAAABAAAAAAAAAAAAAAAAAO0CAAAEAAAAAAAAAAAA
AABrAFEAAAAAABAAAAAAAAAAAAAAAHQATAYAAAAAEAAAAAAAAAAAAAAAdABpBgAAAAAEAAAAAAAA
AAAAAABrAJ8DAAAAABAAAAAAAAAAAAAAAHQASAQAAAAAAAAAAAEAAAAhBQAAAAAAAABJRFRTVmFy
aWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJbnQzMgA8
TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAHNldF9wcm9kdWN0aWQAZ2V0X3Byb2R1Y3RtYXhpZABk
ZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXRO
YW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUA
U0NfM2I4NmM5ODJhMTEwNDg3YWFiNDBkY2I3NzU4ZjNkY2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzNiODZjOTgyYTExMDQ4N2FhYjQw
ZGNiNzc1OGYzZGNmLmRsbABzZXRfcHJvZHVjdGlkX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNl
dF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25F
eGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAElucHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfM2I4
NmM5ODJhMTEwNDg3YWFiNDBkY2I3NzU4ZjNkY2YuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNDXzNiODZjOTgyYTExMDQ4N2FhYjQwZGNiNzc1OGYzZGNmLlBy
b3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29s
dW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABjb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3Jp
cHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vz
c0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBw
AGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4A
IABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBu
ACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAHXAAcgBvAGQAdQBjAHQAXwBtAGEA
eABfAGkAZAAAcVMAQwBfADMAYgA4ADYAYwA5ADgAMgBhADEAMQAwADQAOAA3AGEAYQBiADQAMABk
AGMAYgA3ADcANQA4AGYAMwBkAGMAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAACu9baRBLrHRKyCaGnDcHzXAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCSAD
ARI9HQgSQQUgAgEIHAMgAAIGIAICDhF1BSABHQgIBCAAEnkFIAESfRwFAAASgIEGIAEcEoCFCAAB
EoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBggDBhIUAwYSGAMGEkUDBhJR
AwYSVQMGEiAFIAEBEgwEIAEBAgkgBAEIDhI9EkEFIAEBEkUDIAAIBAAAElEEAAASVQUAAQESVQQA
ABIgAwAAAQMoAAgDKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18zYjg2Yzk4MmExMTA0ODdhYWI0MGRjYjc3NThm
M2RjZgAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyMwAATQEAHC5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3
b3JrIDQuNy4yBAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMAyAAAAAAAAAAAAANoyAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAADMMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AMwBiADgANgBjADkAOAAyAGEAMQAxADAANAA4ADcAYQBhAGIANAAwAGQAYwBi
ADcANwA1ADgAZgAzAGQAYwBmAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAzAGIAOAA2
AGMAOQA4ADIAYQAxADEAMAA0ADgANwBhAGEAYgA0ADAAZABjAGIANwA3ADUAOABmADMAZABjAGYA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwAzAGIAOAA2AGMAOQA4ADIAYQAxADEAMAA0ADgANwBhAGEAYgA0ADAAZABjAGIANwA3ADUA
OABmADMAZABjAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AMwBiADgANgBjADkAOAAyAGEAMQAxADAANAA4ADcAYQBhAGIANAAwAGQAYwBiADcANwA1ADgA
ZgAzAGQAYwBmAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA7DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_3b86c982a110487aab40dcb7758f3dcf</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::product_max_id</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">6B</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Script Component 1.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Script Component 1.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Script Component 1.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Script Component 1.Outputs[Output 0].Columns[productid]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\Script Component 1.Outputs[Output 0].Columns[productid]"
                          name="productid" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension"
                  componentClassID="Microsoft.SCD"
                  contactInfo="Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database."
                  name="Slowly Changing Dimension"
                  version="3">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SELECT statement used to create a schema rowset."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [id], [product_name] FROM [dbo].[NDS_PRODUCT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the WHERE clause in the SELECT statement that selects the current row among rows with identical business keys."
                      name="CurrentRowWhere"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether historical attribute updates are directed to the transformation output for changing attribute updates."
                      name="UpdateChangingAttributeHistory">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the transformation fails when columns with fixed attributes contain changes."
                      name="FailOnFixedAttributeChange">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the column name for the inferred member."
                      name="InferredMemberIndicator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether inferred member updates are detected."
                      name="EnableInferredMember">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the transformation fails when a lookup of an existing record fails."
                      name="FailOnLookupFailure">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies that all rows in the input are new or the transformation detects the change type."
                      name="IncomingRowChangeType"
                      typeConverter="IncomingRowChangeType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Connections[LookupConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Defines the connection to use for lookups in the dimension table"
                      name="LookupConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]"
                      name="Slowly Changing Dimension Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].Columns[out_product_id]"
                          cachedDataType="i4"
                          cachedName="out_product_id"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[id]"
                          lineageId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output].Columns[out_product_id]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              name="ColumnType"
                              typeConverter="ColumnType">1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].Columns[product_name_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name_trimmed"
                          externalMetadataColumnId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[product_name]"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              name="ColumnType"
                              typeConverter="ColumnType">2</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Unchanged Output]"
                      description="Unchanged rows"
                      exclusionGroup="1"
                      name="Unchanged Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[New Output]"
                      description="New rows"
                      exclusionGroup="1"
                      name="New Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Fixed Attribute Output]"
                      description="Rows with changes in columns tagged FixedAttribute"
                      exclusionGroup="1"
                      name="Fixed Attribute Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Changing Attribute Updates Output]"
                      description="These rows contain new information for ChangingAttribute (Type 1) column changes"
                      exclusionGroup="1"
                      name="Changing Attribute Updates Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Historical Attribute Inserts Output]"
                      description="HistoricalAttribute (Type 2) changes result in these new rows"
                      exclusionGroup="2"
                      name="Historical Attribute Inserts Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Inferred Member Updates Output]"
                      description="Information to update unpopulated initial dimension row"
                      exclusionGroup="1"
                      name="Inferred Member Updates Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input].Columns[product_id]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_id]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">-1</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input].Columns[product_name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_name]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input].Columns[order_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="order_date"
                          lineageId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[order_date]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">-2</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_id]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_id]"
                          name="product_id"
                          sortKeyPosition="-1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_id]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_name]"
                          name="product_name">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[product_name]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          name="category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[sub_category]"
                          name="sub_category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[order_date]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[order_date]"
                          name="order_date"
                          sortKeyPosition="-2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[order_date]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Product to DDS\Product to NDS\TRIM values"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="TRIM values"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input].Columns[product_id]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_id"
                          cachedSortKeyPosition="-1"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_id]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input].Columns[product_name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="product_name"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_name]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[category]" />
                        <inputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          lineageId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[sub_category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]"
                          name="product_id_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_id]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(product_id)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]"
                          name="product_name_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[product_name]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(product_name)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]"
                          name="category_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[category]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(category)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]"
                          name="sub_category_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output].Columns[sub_category]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(sub_category)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Aggregate Output 1]"
                  endId="Package\Product to DDS\Product to NDS\Sort.Inputs[Sort Input]"
                  name="Aggregate Output 1"
                  startId="Package\Product to DDS\Product to NDS\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Case 1]"
                  endId="Package\Product to DDS\Product to NDS\Check category.Inputs[Lookup Input]"
                  name="Case 1"
                  startId="Package\Product to DDS\Product to NDS\Conditional Split 1.Outputs[Case 1]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Changing Attribute Updates Output]"
                  endId="Package\Product to DDS\Product to NDS\OLE DB Command 1.Inputs[OLE DB Command Input]"
                  name="Changing Attribute Updates Output"
                  startId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Changing Attribute Updates Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Derived Column Output]"
                  endId="Package\Product to DDS\Product to NDS\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Product to DDS\Product to NDS\TRIM values.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Derived Column Output1]"
                  endId="Package\Product to DDS\Product to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Derived Column Output2]"
                  endId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]"
                  name="Derived Column Output"
                  startId="Package\Product to DDS\Product to NDS\Add updated_date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Inferred Member Updates Output]"
                  endId="Package\Product to DDS\Product to NDS\OLE DB Command.Inputs[OLE DB Command Input]"
                  name="Inferred Member Updates Output"
                  startId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[Inferred Member Updates Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output2]"
                  endId="Package\Product to DDS\Product to NDS\Add updated_date.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output1]"
                  endId="Package\Product to DDS\Product to NDS\Check product.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Product to DDS\Product to NDS\Check sub_category.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output]"
                  endId="Package\Product to DDS\Product to NDS\Check sub_category.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Product to DDS\Product to NDS\Check category.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Lookup No Match Output]"
                  endId="Package\Product to DDS\Product to NDS\Script Component 1.Inputs[Input 0]"
                  name="Lookup No Match Output"
                  startId="Package\Product to DDS\Product to NDS\Check product.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[New Output]"
                  endId="Package\Product to DDS\Product to NDS\Insert Destination.Inputs[OLE DB Destination Input]"
                  name="New Output"
                  startId="Package\Product to DDS\Product to NDS\Slowly Changing Dimension.Outputs[New Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[OLE DB Source Output]"
                  endId="Package\Product to DDS\Product to NDS\Aggregate.Inputs[Aggregate Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Product to DDS\Product to NDS\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Output 0]"
                  endId="Package\Product to DDS\Product to NDS\Add created &amp; updated date.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Product to DDS\Product to NDS\Script Component 1.Outputs[Output 0]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Output 01]"
                  endId="Package\Product to DDS\Product to NDS\Conditional Split 1.Inputs[Conditional Split Input]"
                  name="Output 0"
                  startId="Package\Product to DDS\Product to NDS\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[productIDNOTNULL]"
                  endId="Package\Product to DDS\Product to NDS\Script Component.Inputs[Input 0]"
                  name="productIDNOTNULL"
                  startId="Package\Product to DDS\Product to NDS\Conditional Split.Outputs[productIDNOTNULL]" />
                <path
                  refId="Package\Product to DDS\Product to NDS.Paths[Sort Output]"
                  endId="Package\Product to DDS\Product to NDS\TRIM values.Inputs[Derived Column Input]"
                  name="Sort Output"
                  startId="Package\Product to DDS\Product to NDS\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Product to DDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{2D57135B-6DB9-4F63-BB5E-2C91FE4241EE}"
          DTS:From="Package\Product to DDS\Get product_max_id"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Product to DDS\Product to NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sub_category to NDS"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{A4111226-045A-4B9E-8EFD-94C967CA32DF}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sub_category to NDS">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sub_category to NDS\Get sub_cate_max_id"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D703A3E4-7CD3-43D3-97C6-50B28E30C150}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get sub_cate_max_id"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{97923543-993D-4C1A-910C-9D7C63BE69C8}"
              SQLTask:SqlStatementSource="select ISNULL(MAX(id),0) from NDS_SUB_CATEGORY"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::sub_cate_max_id" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sub_category to NDS\Sub_category to NDS"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5D95EBB1-3616-42DE-8A06-8043A5651579}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sub_category to NDS"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add created_date &amp; updated_date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]"
                          name="created_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]"
                          name="updated_date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[GETDATE]()</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">GETDATE()</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Inputs[Aggregate Input 1].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                          name="category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]"
                          name="sub_category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Check category"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check category"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_CATEGORY]) [refTable]
where [refTable].[category] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input].Columns[category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category_trimmed"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">category</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]"
                          name="category_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">id</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check sub_category"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[NDS_SUB_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[NDS_SUB_CATEGORY]) [refTable]
where [refTable].[sub_category] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sub_category" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="created_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updated_date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input].Columns[sub_category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category_trimmed"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">sub_category</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input].Columns[sub_category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category_trimmed"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[subCategoryNULL]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="subCategoryNULL"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(sub_category_trimmed)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[subCategoryNOTNULL]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="subCategoryNOTNULL"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[NDS_SUB_CATEGORY]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{97923543-993D-4C1A-910C-9D7C63BE69C8}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD.NDS_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_id]"
                          cachedDataType="i4"
                          cachedName="category_id"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Match Output].Columns[category_id]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[created_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="created_date"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[created_date]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[updated_date]"
                          cachedDataType="dbTimeStamp"
                          cachedName="updated_date"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output].Columns[updated_date]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[subcategoryid]"
                          cachedDataType="i4"
                          cachedName="subcategoryid"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Outputs[Output 0].Columns[subcategoryid]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[sub_category_trimmed]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category_trimmed"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category]"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="i4"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sub_category]"
                          dataType="wstr"
                          length="255"
                          name="sub_category" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                          dataType="i4"
                          name="category_id" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[created_date]"
                          dataType="dbTimeStamp"
                          name="created_date" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated_date]"
                          dataType="dbTimeStamp"
                          name="updated_date" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Stage_Product]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1258</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{DF370CB7-DC68-4721-ADC8-988F986BD9B4}:external"
                      connectionManagerRefId="Project.ConnectionManagers[CLOUD Stage_SuperStore]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sub_category]"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[sub_category]"
                          name="sub_category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].Columns[category]"
                          name="category"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_id]"
                          dataType="wstr"
                          length="255"
                          name="product_id" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[category]"
                          dataType="wstr"
                          length="255"
                          name="category" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[sub_category]"
                          dataType="wstr"
                          length="255"
                          name="sub_category" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[product_name]"
                          dataType="wstr"
                          length="255"
                          name="product_name" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[source_id]"
                          dataType="i4"
                          name="source_id" />
                        <externalMetadataColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[order_date]"
                          dataType="dbTimeStamp"
                          name="order_date" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[sub_category]"
                          name="sub_category" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[category]"
                          name="category" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 subcatemaxid
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["sub_cate_max_id"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count = 0;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        Row.subcategoryid = this.Variables.subcatemaxid + count;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 subcategoryid
    {
        set
        {
            this[0] = value;
        }
    }
    public bool subcategoryid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Settings.get_Default():SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Sett" +
    "ings")]

namespace SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f2eeb4b5ca594251bea4bcddaceae1d6.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9F9C96B7-D0AC-4306-B6EF-BCE924345B99}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f2eeb4b5ca594251bea4bcddaceae1d6</RootNamespace>
    <AssemblyName>SC_f2eeb4b5ca594251bea4bcddaceae1d6</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_f2eeb4b5ca594251bea4bcddaceae1d6</msb:CodeName>
    <msb:DisplayName>SC_f2eeb4b5ca594251bea4bcddaceae1d6</msb:DisplayName>
    <msb:ProjectId>{289F3A4C-C697-4526-AADA-05B1E9CE6C70}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f2eeb4b5ca594251bea4bcddaceae1d6.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f2eeb4b5ca594251bea4bcddaceae1d6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_f2eeb4b5ca594251bea4bcddaceae1d6")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f2eeb4b5ca594251bea4bcddaceae1d6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f2eeb4b5ca594251bea4bcddaceae1d6.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADkhgGUAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA8jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKAyAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
MgAAAAAAAEgAAAACAAUA0CEAABgQAAABAAAAAAAAAOgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqeAgJ7AQAABBdYfQEAAAQDAnsD
AAAEbxAAAAYCewEAAARYbwYAAAYqHgIoCgAABioqAgMEBSgSAAAKKjoCFgOMGgAAASgTAAAKKloD
LAgCFigUAAAKKnIBAABwcxUAAAp6HgIoFgAACioeAigXAAAKKn4CKBgAAAoCAnMOAAAGfQIAAAQC
AnMPAAAGfQMAAAQqkgRyngAAcBpvGQAACiwVAgUCAygaAAAKDgRzBQAABm8MAAAGKkorBwIDbw0A
AAYDbwgAAAYt8SoGKjoCKBsAAAoCA30EAAAEKjoCKBsAAAoCA30FAAAEKpYCewUAAARvHAAACnKu
AABwbx0AAAooHgAACm8fAAAKpRoAAAEqHgIoGwAACiqufgYAAAQtHnLOAABw0AcAAAIoIAAACm8h
AAAKcyIAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAigjAAAKKi5zFgAABoAI
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIgFAAAjfgAA9AUAABgH
AAAjU3RyaW5ncwAAAAAMDQAAQAEAACNVUwBMDgAAEAAAACNHVUlEAAAAXA4AALwBAAAjQmxvYgAA
AAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAgAAAAXAAAADwAAACMAAAAQAAAA
BAAAAAYAAAAHAAAAAQAAAAUAAAABAAAAAABMAwEAAAAAAAYARgL4BAYA2gL4BAYAkgHlBA8AbAUA
AAYAvwHvAwYAKQLvAwYACgLvAwYAwQLvAwYAZgLvAwYAfwLvAwYA1gHvAwYA8QEVAwoAmgLfAAoA
jwTfAA4AgATfAAoAOATfAAoAPgbfAAYAAQanAwYAdQHlBAYAoAQYBQYALATaAxIARQE2AxIApgE2
AxIALQHFAwYAWgH4BAYAOgCnAwYAAQSnAwYALwOnAwYAGwSnAxYAEQCwBBYAAQCwBEcAugYAABYA
IgCwBAYAAAGnAwYAsQCnAwYADQfvAwAAAABkAAAAAAABAAEAAQAQALoDAAAQAAEAAQABABAAcwQA
ADkAAgAFAAEAEAAgBgAARQACAAoAAQAQAPUFAABJAAQADgABABAAtgUAAEkABQAPAAAAEAAfBXsF
SQAGABEAAAEQAOUFewVhAAgAFQABAE4GfQAGAPUFgAAGALYFhAABAC4GiAABAC4GiAARAK4DjAAR
AB0BkAARAKEAlABQIAAAAADGAPgCBgABAFggAAAAAMYAAwMGAAEAYCAAAAAAxgDqBpgAAQCIIAAA
AACGGNgEBgACAJAgAAAAAIYY2AQbAAIAmyAAAAAAhgiPAAEABQCqIAAAAACGCHQDngAGAMEgAAAA
AIYAAQcrAAcAySAAAAAAhgAIBisABwDRIAAAAACGGNgEBgAHAPEgAAAAAMYAmQajAAcAFiEAAAAA
xgGSBpgACwApIQAAAADGAeoGmAAMACshAAAAAIYY2AStAA0AOiEAAAAAhhjYBK0ADgBJIQAAAACG
CH4AswAPAG8hAAAAAIMY2AQGAA8AdyEAAAAAkwicBLcADwCjIQAAAACTCAUBvAAPAKohAAAAAJMI
EQHBAA8AsiEAAAAAlggUBscAEAC5IQAAAACGGNgEBgAQAMEhAAAAAJEY3gTMABAAAAABAAUHAAAB
AJUEAAACAMAFAAADAEYEAAABAA8DAAABAA8DAAABAG0AAAACANUAAAADAJUEAAAEAEYEAAABAJUE
AAABAAUHAAABAEQGAAABAEQGAAABAA8DCQDYBAEAEQDYBAYAGQDYBAoAKQDYBBAAMQDYBBAAOQDY
BBAAQQDYBBAASQDYBBAAUQDYBBAAWQDYBBAAYQDYBBAAaQDYBAYAmQDYBAYAuQDYBBUAyQDYBAYA
iQD4AgYAiQADAwYAcQDYBBsAcQCeAyUAcQCNAwEA2QDYBBAAcQABBysAcQAIBisAiQDYBAYA4QDu
BS8AiQDUBTYAkQDYBAYAiQCqBTwA8QCVA0EAiQDVBkcA+QCmBk0AEQHDAFQAEQEJB10AoQDYBGMA
wQDYBAYALgALAOcALgATAPAALgAbAA8BLgAjABgBLgArAEEBLgAzAEEBLgA7AEcBLgBDABgBLgBL
AE8BLgBTAEEBLgBbAGgBQwBjALYBiQBzAA8BqQBzAA8B4wBrALYBAQF7ALYBAwABAAYAAwAHAAQA
CAAGAAAAkwDQAAAAeAPUAAAAggDQAAAAoATYAAAAJQHdAAAAGAbiAAEABgADAAEABwAFAAIAEAAH
AAIAEgAJAAIAEwALAAEAFAALAAIAFQANAASAAAABAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAAAAAAA
AABrAHUAAAAAABAAAAAAAAAAAAAAAHQAVAYAAAAAEAAAAAAAAAAAAAAAdABxBgAAAAAEAAAAAAAA
AAAAAABrAKcDAAAAABAAAAAAAAAAAAAAAHQAUAQAAAAAAAAAAAEAAAApBQAAAAAAAABJRFRTVmFy
aWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJbnQzMgBT
Q19mMmVlYjRiNWNhNTk0MjUxYmVhNGJjZGRhY2VhZTFkNgA8TW9kdWxlPgBJbnB1dElEAG1zY29y
bGliAGdldF9zdWJjYXRlbWF4aWQAc2V0X3N1YmNhdGVnb3J5aWQAZGVmYXVsdEluc3RhbmNlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mMmVlYjRiNWNhNTk0MjUx
YmVhNGJjZGRhY2VhZTFkNi5kbGwAc2V0X3N1YmNhdGVnb3J5aWRfSXNOdWxsAFNldE51bGwAZ2V0
X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9w
ZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVN
YXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAASW5wdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ19mMmVlYjRiNWNhNTk0MjUxYmVhNGJjZGRhY2VhZTFkNi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjJlZWI0YjVjYTU5NDI1MWJlYTRiY2RkYWNl
YWUxZDYuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhl
cwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5k
T2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0
Q29tcG9uZW50AGNvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1ZVdpdGhDb250
ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0
MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAfcwB1AGIAXwBjAGEA
dABlAF8AbQBhAHgAXwBpAGQAAHFTAEMAXwBmADIAZQBlAGIANABiADUAYwBhADUAOQA0ADIANQAx
AGIAZQBhADQAYgBjAGQAZABhAGMAZQBhAGUAMQBkADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAHI4YGwAZp5LmCr0bVqGq6IABCABAQgDIAABBSABARERBCABAQ4F
IAEBEVkJIAMBEj0dCBJBBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYg
ARwSgIUIAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIY
AwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQESRQMgAAgEAAASUQQAABJV
BQABARJVBAAAEiADAAABAygACAMoAAIECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2YyZWViNGI1Y2E1OTQyNTFiZWE0
YmNkZGFjZWFlMWQ2AAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDIzAABNAQAc
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5F
VCBGcmFtZXdvcmsgNC43LjIEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMu
UmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRp
bWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAyDIAAAAAAAAAAAAA4jIAAAAgAAAA
AAAAAAAAAAAAAAAAAAAAAAAAANQyAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AZgAyAGUAZQBiADQAYgA1AGMAYQA1ADkANAAyADUAMQBiAGUAYQA0AGIAYwBk
AGQAYQBjAGUAYQBlADEAZAA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADIAZQBl
AGIANABiADUAYwBhADUAOQA0ADIANQAxAGIAZQBhADQAYgBjAGQAZABhAGMAZQBhAGUAMQBkADYA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBmADIAZQBlAGIANABiADUAYwBhADUAOQA0ADIANQAxAGIAZQBhADQAYgBjAGQAZABhAGMA
ZQBhAGUAMQBkADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AZgAyAGUAZQBiADQAYgA1AGMAYQA1ADkANAAyADUAMQBiAGUAYQA0AGIAYwBkAGQAYQBjAGUA
YQBlADEAZAA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA9DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_f2eeb4b5ca594251bea4bcddaceae1d6</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::sub_cate_max_id</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">57</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Outputs[Output 0].Columns[subcategoryid]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Outputs[Output 0].Columns[subcategoryid]"
                          name="subcategoryid" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\Sort"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Inputs[Sort Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Inputs[Sort Input].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[category]"
                          name="category">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[category]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[sub_category]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[sub_category]"
                          name="sub_category"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1].Columns[sub_category]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="TRIM values"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input].Columns[category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="category"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[category]" />
                        <inputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input].Columns[sub_category]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="sub_category"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[sub_category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[category_trimmed]"
                          name="category_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[category]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(category)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output].Columns[sub_category_trimmed]"
                          name="sub_category_trimmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[TRIM](#{Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output].Columns[sub_category]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TRIM(sub_category)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Aggregate Output 1]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Inputs[Sort Input]"
                  name="Aggregate Output 1"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Derived Column Output]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Derived Column Output1]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Lookup Match Output]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Lookup No Match Output]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Inputs[Input 0]"
                  name="Lookup No Match Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[OLE DB Source Output]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Aggregate.Inputs[Aggregate Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Output 0]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[Sort Output]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\TRIM values.Inputs[Derived Column Input]"
                  name="Sort Output"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Sort.Outputs[Sort Output]" />
                <path
                  refId="Package\Sub_category to NDS\Sub_category to NDS.Paths[subCategoryNOTNULL]"
                  endId="Package\Sub_category to NDS\Sub_category to NDS\Check category.Inputs[Lookup Input]"
                  name="subCategoryNOTNULL"
                  startId="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split.Outputs[subCategoryNOTNULL]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sub_category to NDS.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ADD95731-BB43-4E97-9BE7-044432B96F05}"
          DTS:From="Package\Sub_category to NDS\Get sub_cate_max_id"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sub_category to NDS\Sub_category to NDS" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{33847D83-D23C-44DD-B29F-04DE9A6BCE01}"
      DTS:From="Package\Category to NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sub_category to NDS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4BEF6513-F734-44AD-ACFE-D7A89B084F66}"
      DTS:From="Package\Sub_category to NDS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Product to DDS" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="157,42"
          Id="Package\Category to NDS\Category to NDS"
          TopLeft="38,84" />
        <NodeLayout
          Size="158,42"
          Id="Package\Category to NDS\Get cate_max_id"
          TopLeft="34,9" />
        <EdgeLayout
          Id="Package\Category to NDS.PrecedenceConstraints[Constraint]"
          TopLeft="114.75,51">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="230,176"
          Size="230,219"
          Id="Package\Category to NDS"
          TopLeft="64,48" />
        <NodeLayout
          Size="174,42"
          Id="Package\Product to DDS\Get product_max_id"
          TopLeft="30,8" />
        <NodeLayout
          Size="151,42"
          Id="Package\Product to DDS\Product to NDS"
          TopLeft="49,91" />
        <EdgeLayout
          Id="Package\Product to DDS.PrecedenceConstraints[Constraint]"
          TopLeft="120.75,50">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="239,206"
          Size="239,249"
          Id="Package\Product to DDS"
          TopLeft="728,40" />
        <NodeLayout
          Size="181,42"
          Id="Package\Sub_category to NDS\Get sub_cate_max_id"
          TopLeft="33,10" />
        <NodeLayout
          Size="179,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS"
          TopLeft="32,94" />
        <EdgeLayout
          Id="Package\Sub_category to NDS.PrecedenceConstraints[Constraint]"
          TopLeft="122.5,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42"
              Start="0,0"
              End="0,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="279,189"
          Size="279,232"
          Id="Package\Sub_category to NDS"
          TopLeft="377,46" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="294,159.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="83,0"
              Start="0,0"
              End="75.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="75.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="656,163.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72,0"
              Start="0,0"
              End="64.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Category to NDS\Category to NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Category to NDS\Category to NDS\OLE DB Source"
          TopLeft="315,14" />
        <NodeLayout
          Size="127,42"
          Id="Package\Category to NDS\Category to NDS\Aggregate"
          TopLeft="327,90" />
        <NodeLayout
          Size="132,42"
          Id="Package\Category to NDS\Category to NDS\Check exist"
          TopLeft="320,407" />
        <NodeLayout
          Size="155,42"
          Id="Package\Category to NDS\Category to NDS\Conditional Split"
          TopLeft="312,330" />
        <NodeLayout
          Size="171,42"
          Id="Package\Category to NDS\Category to NDS\OLE DB Destination"
          TopLeft="306,647" />
        <NodeLayout
          Size="163,42"
          Id="Package\Category to NDS\Category to NDS\Script Component"
          TopLeft="307,485" />
        <NodeLayout
          Size="154,42"
          Id="Package\Category to NDS\Category to NDS\Derived Column"
          TopLeft="309,243" />
        <NodeLayout
          Size="241,42"
          Id="Package\Category to NDS\Category to NDS\Add created_date &amp; updated_date"
          TopLeft="272,571" />
        <NodeLayout
          Size="98,42"
          Id="Package\Category to NDS\Category to NDS\Sort"
          TopLeft="334,163" />
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Output 0]"
          TopLeft="390.5,527">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[OLE DB Source Output]"
          TopLeft="390.25,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Lookup No Match Output]"
          TopLeft="387.25,449">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,8.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Derived Column Output1]"
          TopLeft="392,613">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Derived Column Output]"
          TopLeft="387.75,285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[CategoryNOTNULL]"
          TopLeft="387.75,372">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.914453125,8.00634765625,83.82890625,11.4873046875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Aggregate Output 1]"
          TopLeft="386.75,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Category to NDS\Category to NDS.Paths[Sort Output]"
          TopLeft="384.5,205">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Category to NDS\Category to NDS\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Category to NDS\Category to NDS\Check exist">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Category to NDS\Category to NDS\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Product to DDS\Product to NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="209,42"
          Id="Package\Product to DDS\Product to NDS\Slowly Changing Dimension"
          TopLeft="439.5,1127.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Product to DDS\Product to NDS\Conditional Split"
          TopLeft="466.5,413.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Product to DDS\Product to NDS\Check sub_category"
          TopLeft="457,821.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Product to DDS\Product to NDS\Check category"
          TopLeft="468.5,719.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Product to DDS\Product to NDS\Add updated_date"
          TopLeft="461.5,1025.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Product to DDS\Product to NDS\Aggregate"
          TopLeft="480.5,107.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Product to DDS\Product to NDS\Script Component 1"
          TopLeft="229,1025.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Product to DDS\Product to NDS\Conditional Split 1"
          TopLeft="462,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Product to DDS\Product to NDS\OLE DB Destination"
          TopLeft="5.50000000000011,1229.5" />
        <NodeLayout
          Size="98,42"
          Id="Package\Product to DDS\Product to NDS\Sort"
          TopLeft="495,209.5" />
        <NodeLayout
          Size="137,42"
          Id="Package\Product to DDS\Product to NDS\TRIM values"
          TopLeft="475.5,311.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Product to DDS\Product to NDS\Check product"
          TopLeft="471,923.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Product to DDS\Product to NDS\OLE DB Source"
          TopLeft="469,5.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Product to DDS\Product to NDS\Script Component"
          TopLeft="462.5,515.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Product to DDS\Product to NDS\Add created &amp; updated date"
          TopLeft="167,1127.5" />
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Sort Output]"
          TopLeft="544,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[productIDNOTNULL]"
          TopLeft="544,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.1085546875,20.4453125,88.217109375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Output 01]"
          TopLeft="544,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Output 0]"
          TopLeft="315,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.9999999999999,60"
              Start="0,0"
              End="-41.9999999999999,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-37.9999999999999,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.9999999999999,30"
                    Point2="-41.9999999999999,30"
                    Point3="-41.9999999999999,34" />
                  <mssgle:LineSegment
                    End="-41.9999999999999,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[OLE DB Source Output]"
          TopLeft="544,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Lookup No Match Output]"
          TopLeft="521,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206,60"
              Start="0,0"
              End="-206,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-202,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-202,24.390243902439"
                    Point2="-206,24.390243902439"
                    Point3="-206,28.390243902439" />
                  <mssgle:LineSegment
                    End="-206,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-158.80638671875,29.390243902439,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output2]"
          TopLeft="567,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23,60"
              Start="0,0"
              End="-23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-19,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-19,24.390243902439"
                    Point2="-23,24.390243902439"
                    Point3="-23,28.390243902439" />
                  <mssgle:LineSegment
                    End="-23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.69138671875,29.390243902439,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output1]"
          TopLeft="544,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Lookup Match Output]"
          TopLeft="544,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Derived Column Output1]"
          TopLeft="273,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-182,60"
              Start="0,0"
              End="-182,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-178,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-178,30"
                    Point2="-182,30"
                    Point3="-182,34" />
                  <mssgle:LineSegment
                    End="-182,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Derived Column Output]"
          TopLeft="544,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Derived Column Output2]"
          TopLeft="544,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Case 1]"
          TopLeft="544,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.2180859375,21.47314453125,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Aggregate Output 1]"
          TopLeft="544,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Product to DDS\Product to NDS\Insert Destination"
          TopLeft="237.5,1229.5" />
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[New Output]"
          TopLeft="493.75,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-174.75,60"
              Start="0,0"
              End="-174.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.503937007874" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.503937007874"
                    Point2="0,20.503937007874"
                    Point3="-4,20.503937007874" />
                  <mssgle:LineSegment
                    End="-170.75,20.503937007874" />
                  <mssgle:CubicBezierSegment
                    Point1="-170.75,20.503937007874"
                    Point2="-174.75,20.503937007874"
                    Point3="-174.75,24.503937007874" />
                  <mssgle:LineSegment
                    End="-174.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-114.46638671875,25.503937007874,54.1827734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="166,42"
          Id="Package\Product to DDS\Product to NDS\OLE DB Command"
          TopLeft="461,1229.5" />
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Inferred Member Updates Output]"
          TopLeft="544,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-74.40298828125,20.4208984375,148.8059765625,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="175,42"
          Id="Package\Product to DDS\Product to NDS\OLE DB Command 1"
          TopLeft="687.5,1229.5" />
        <EdgeLayout
          Id="Package\Product to DDS\Product to NDS.Paths[Changing Attribute Updates Output]"
          TopLeft="594.25,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="180.75,60"
              Start="0,0"
              End="180.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.503937007874" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.503937007874"
                    Point2="0,20.503937007874"
                    Point3="4,20.503937007874" />
                  <mssgle:LineSegment
                    End="176.75,20.503937007874" />
                  <mssgle:CubicBezierSegment
                    Point1="176.75,20.503937007874"
                    Point2="180.75,20.503937007874"
                    Point3="180.75,24.503937007874" />
                  <mssgle:LineSegment
                    End="180.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="11.84109375,25.503937007874,157.0678125,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\Slowly Changing Dimension">
    <Properties>
      <Property>
        <Name>SCDMetadata</Name>
        <Value
          type="q2:string">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;SCDWizardMetadata xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  &lt;ConnectionID&gt;{97923543-993D-4C1A-910C-9D7C63BE69C8}&lt;/ConnectionID&gt;
  &lt;TableName&gt;[dbo].[NDS_PRODUCT]&lt;/TableName&gt;
  &lt;InputToColumnsCollection&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Check category.Outputs[Lookup Match Output].Columns[category_id]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;category_id&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Check product.Outputs[Lookup Match Output].Columns[created_date]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;created_date&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Check product.Outputs[Lookup Match Output].Columns[out_product_id]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;id&lt;/ColumnName&gt;
      &lt;KeyType&gt;BusinessKey&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;TRIM values.Outputs[Derived Column Output].Columns[product_id_trimmed]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;product_id&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;TRIM values.Outputs[Derived Column Output].Columns[product_name_trimmed]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;product_name&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;ChangingAttribute&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Check sub_category.Outputs[Lookup Match Output].Columns[sub_category_id]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;sub_category_id&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Add updated_date.Outputs[Derived Column Output].Columns[updated_date]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;updated_date&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
  &lt;/InputToColumnsCollection&gt;
  &lt;GeneratedComponentsIdentificationStrings&gt;
    &lt;anyType xsi:type="xsd:string"&gt;Insert Destination&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;OLE DB Command&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;OLE DB Command 1&lt;/anyType&gt;
  &lt;/GeneratedComponentsIdentificationStrings&gt;
  &lt;FailFixedAttribute&gt;false&lt;/FailFixedAttribute&gt;
  &lt;FailChangeAttribute&gt;false&lt;/FailChangeAttribute&gt;
  &lt;UseStartEndDate&gt;false&lt;/UseStartEndDate&gt;
  &lt;CurrentIndicatorColumn /&gt;
  &lt;InferredIndicatorColumn /&gt;
  &lt;ValueCurrent /&gt;
  &lt;ValueExpired /&gt;
  &lt;StartDateColumn /&gt;
  &lt;EndDateColumn /&gt;
  &lt;DateVariable /&gt;
  &lt;EnableInferredSupport&gt;true&lt;/EnableInferredSupport&gt;
&lt;/SCDWizardMetadata&gt;</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\Check sub_category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_SUB_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\Check category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\Check product">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_PRODUCT]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Product to DDS\Product to NDS\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sub_category to NDS\Sub_category to NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Conditional Split"
          TopLeft="324,335" />
        <NodeLayout
          Size="127,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Aggregate"
          TopLeft="341,111" />
        <NodeLayout
          Size="241,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Add created_date &amp; updated_date"
          TopLeft="289,646" />
        <NodeLayout
          Size="163,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Script Component"
          TopLeft="333,571" />
        <NodeLayout
          Size="171,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination"
          TopLeft="327,722" />
        <NodeLayout
          Size="174,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category"
          TopLeft="327,491" />
        <NodeLayout
          Size="98,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Sort"
          TopLeft="358,189" />
        <NodeLayout
          Size="137,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\TRIM values"
          TopLeft="336,262" />
        <NodeLayout
          Size="150,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source"
          TopLeft="329,24" />
        <NodeLayout
          Size="151,42"
          Id="Package\Sub_category to NDS\Sub_category to NDS\Check category"
          TopLeft="333,412" />
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[subCategoryNOTNULL]"
          TopLeft="405,377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-49.69701171875,7.91845703125,99.3940234375,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Sort Output]"
          TopLeft="405.75,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Output 0]"
          TopLeft="412,613">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[OLE DB Source Output]"
          TopLeft="404.25,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Lookup No Match Output]"
          TopLeft="414.25,533">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,9.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Lookup Match Output]"
          TopLeft="411.25,454">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,8.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Derived Column Output1]"
          TopLeft="411,688">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Derived Column Output]"
          TopLeft="403,304">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sub_category to NDS\Sub_category to NDS.Paths[Aggregate Output 1]"
          TopLeft="405.75,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sub_category to NDS\Sub_category to NDS\Check sub_category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_SUB_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sub_category to NDS\Sub_category to NDS\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sub_category to NDS\Sub_category to NDS\Check category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[NDS_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>